---
# Source: fluentd/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: fluentd
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  volumes:
    - 'configMap'
    - 'secret'
    - 'hostPath'
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
---
# Source: fluentd/templates/files.conf/systemd.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
  name: fluentd-systemd-conf
data:
  systemd.conf: |-
    <source>
      @type systemd
      @id in_systemd_internal_kubernetes
      @label @KUBERNETES_SYSTEM
      matches [{"_SYSTEMD_UNIT":"kubelet.service"},{"_SYSTEMD_UNIT":"kube-apiserver.service"},{"_SYSTEMD_UNIT":"kube-controller-manager.service"},{"_SYSTEMD_UNIT":"kube-proxy.service"},{"_SYSTEMD_UNIT":"kube-scheduler.service"}]
      read_from_head true
      tag "internal-kubernetes.systemd"
      <storage>
        @type "local"
        persistent true
        path "/var/log/fluentd-journald-internal_kubernetes-cursor.json"
      </storage>
      <entry>
        fields_strip_underscores true
        field_map {"MESSAGE": "message", "_TRANSPORT": "stream", "_SYSTEMD_UNIT": "systemd_unit", "_HOSTNAME": "hostname"}
        field_map_strict true
      </entry>
    </source>

    <source>
      @type systemd
      @id in_systemd_etcd
      @label @KUBERNETES_SYSTEM
      matches [{"_SYSTEMD_UNIT":"etcd.service"}]
      read_from_head true
      tag "etcd.systemd"
      <storage>
        @type "local"
        persistent true
        path "/var/log/fluentd-journald-internal_etcd-cursor.json"
      </storage>
      <entry>
        fields_strip_underscores true
        field_map {"MESSAGE": "message", "_TRANSPORT": "stream", "_SYSTEMD_UNIT": "systemd_unit", "_HOSTNAME": "hostname"}
        field_map_strict true
      </entry>
    </source>

    <label @KUBERNETES_SYSTEM>
      <filter internal-kubernetes.systemd>
        @type parser
        key_name message
        <parse>
          @type regexp
          expression /^(?<level>[a-zA-Z])[0-9]* ([\d:.]+)\s+\d+ (?<file>[a-zA-Z-_.]+):(?<line>[\d]+)\]\s+(?<log>.*)$/
        </parse>
        reserve_data true
        reserve_time true
      </filter>

      <filter etcd.systemd>
        @type parser
        key_name message
        <parse>
          @type regexp
          expression /^([^ ]+\s[^ ]+) (?<level>[A-Z]) \| (?<component>[a-zA-Z-_.]+): (?<log>.*)$/
        </parse>
        reserve_data true
        reserve_time true
      </filter>

      <filter **>
        @type record_transformer
        enable_ruby
        <record>
          raw ${record["message"]}
        </record>
        remove_keys message
      </filter>

      <match **>
        @type relabel
        @label @DISPATCH
      </match>
    </label>
---
# Source: fluentd/templates/fluentd-configurations-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-main
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
data:
  fluent.conf: |-
    # do not collect fluentd logs to avoid infinite loops.
    <label @FLUENT_LOG>
      <match **>
        @type null
        @id ignore_fluent_logs
      </match>
    </label>

    @include config.d/*.conf
    @include fluentd-prometheus-conf.d/*
---
# Source: fluentd/templates/fluentd-configurations-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
data:
  01_sources.conf: |-
    ## logs from podman
    <source>
      @type tail
      @id in_tail_container_logs
      @label @KUBERNETES
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_type string
          time_format "%Y-%m-%dT%H:%M:%S.%NZ"
          keep_time_key false
        </pattern>
        <pattern>
          format regexp
          expression /^(?<time>.+) (?<stream>stdout|stderr)( (.))? (?<log>.*)$/
          time_format '%Y-%m-%dT%H:%M:%S.%NZ'
          keep_time_key false
        </pattern>
      </parse>
      emit_unmatched_lines true
    </source>
  02_filters.conf: |-
    <label @KUBERNETES>
      <match kubernetes.var.log.containers.fluentd**>
        @type relabel
        @label @FLUENT_LOG
      </match>
    
      # <match kubernetes.var.log.containers.**_kube-system_**>
      #   @type null
      #   @id ignore_kube_system_logs
      # </match>
    
      <filter kubernetes.**>
        @type kubernetes_metadata
        @id filter_kube_metadata
        skip_labels false
        skip_container_metadata false
        skip_namespace_metadata true
        skip_master_url true
      </filter>
    
      <match **>
        @type relabel
        @label @DISPATCH
      </match>
    </label>
  03_dispatch.conf: |-
    <label @DISPATCH>
      <filter **>
        @type prometheus
        <metric>
          name fluentd_input_status_num_records_total
          type counter
          desc The total number of incoming records
          <labels>
            tag ${tag}
            hostname ${hostname}
          </labels>
        </metric>
      </filter>
    
      <match **>
        @type relabel
        @label @OUTPUT
      </match>
    </label>
  04_outputs.conf: |-
    <label @OUTPUT>
      <match **>
        @type elasticsearch
        host "mykloud-master"
        port 9200
        path ""
      </match>
    </label>
---
# Source: fluentd/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: fluentd/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resourceNames:
      - fluentd
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
# Source: fluentd/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd
subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: logging
---
# Source: fluentd/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: fluentd
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 24231
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
---
# Source: fluentd/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  labels:
    helm.sh/chart: fluentd-0.2.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fluentd
      app.kubernetes.io/instance: fluentd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluentd
        app.kubernetes.io/instance: fluentd
    spec:
      serviceAccountName: fluentd
      securityContext:
        {}
      containers:
        - name: fluentd
          securityContext:
            {}
          image: "fluent/fluentd-kubernetes-daemonset:v1.12.0-debian-elasticsearch7-1.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: FLUENTD_CONF
              value: ../../etc/fluent/fluent.conf
            - name: FLUENT_ELASTICSEARCH_HOST
              value: mykloud-master
            - name: FLUENT_ELASTICSEARCH_PORT
              value: "9200"
          ports:
          - name: metrics
            containerPort: 24231
            protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /metrics
          #     port: metrics
          # readinessProbe:
          #   httpGet:
          #     path: /metrics
          #     port: metrics
          resources:
              limits:
                cpu: 100m
                memory: 128Mi
              requests:
                cpu: 100m
                memory: 128Mi
          volumeMounts:
            - mountPath: /var/log
              name: varlog
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
            - mountPath: /etc/fluent
              name: etcfluentd-main
            - mountPath: /etc/fluent/config.d/
              name: etcfluentd-config
      volumes:
        - hostPath:
            path: /var/log
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
        - configMap:
            defaultMode: 511
            name: fluentd-main
          name: etcfluentd-main
        - configMap:
            defaultMode: 511
            name: fluentd-config
          name: etcfluentd-config
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists